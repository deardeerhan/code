import java.util.PriorityQueue;
import java.util.Comparator;
class Card implements Comparable<Card>{//实现compareble接口,重写compareTo方法
    public int rank;//数值
    public String suit;//花色
    public Card(int rank,String suit){
        this.rank=rank;
        this.suit=suit;
    }
  public int compareTo(Card o){
        return rank-o.rank;
   }
   @Override
    public boolean equals(Object o){//重写equals方法
        if (this==o){
            return true;
        }
        if(o==null||!(o instanceof Card)){
            return false;
        }
        Card card=((Card)o);
        return rank==card.rank&&suit.equals(card.suit);
   }

}
//基于比较器的比较
class CardComp implements Comparator<Card>{
    @Override
    public int compare(Card o1,Card o2){
        if(o1==o1){
            return 0;
        }
        if(o1==null){
            return -1;
        }
        if(o2==null){
            return 1;
        }

        return o2.rank-o1.rank;
    }
}

public class TestPriorityQueue {
    public static void TestPriorityQueue() {
        PriorityQueue<Card> p=new PriorityQueue<>();
        p.offer(new Card(5,"?"));
        p.offer(new Card(6,"?"));
        p.offer(new Card(4,"?"));

    }

    public static void TestCompare1(){
        int a = 10;
        int b = 20;
        System.out.println(a > b);
        System.out.println(a < b);
        System.out.println(a == b);
        char c1 = 'A';
        char c2 = 'B';
        System.out.println(c1 > c2);
        System.out.println(c1 < c2);
        System.out.println(c1 == c2);
        boolean b1 = true;
        boolean b2 = false;
        System.out.println(b1 == b2);
        System.out.println(b1 != b2);
    }
    public static void TestCompare2(){
        Card c1=new Card(1,"?");
        Card c2=new Card(2,"?");
        Card c3=c1;
        Card c4=new Card(1,"?");

        if(c1.equals(c4)){
            System.out.println("c1==c4");
        }
        else {
            System.out.println("c1!=c4");
        }
        System.out.println(c1==c2);
        System.out.println(c1!=c2);
        System.out.println(c1==c4);
       // System.out.println(c1>c3);
        System.out.println(c1.compareTo(c2));
    }
    public static void TestCompare3(){
        Card c1=new Card(1,"?");
        Card c2=new Card(2,"?");
        Card c3=c1;
        Card c4=new Card(1,"?");
//如果要比较，先要给一个比较器对象
        CardComp comp=new CardComp();
        if(comp.compare(c1,c2)>0){
            System.out.println("c1>c2");
        }else if(comp.compare(c1,c2)==0){
            System.out.println("c1==c2");
        }else{
            System.out.println("c1<c2");
        }
    }
public static void TestPripoeityQueue(){
    Card c1=new Card(5,"?");
    Card c2=new Card(2,"?");
    Card c3=new Card(1,"?");
    Card c4=new Card(3,"?");
PriorityQueue<Card> p1=new PriorityQueue<>(4);
    p1.offer(c1);
    p1.offer(c2);
    p1.offer(c3);
    p1.offer(c4);

    //大堆
    PriorityQueue<Card> p2=new PriorityQueue<>(4);
    p2.offer(c1);
    p2.offer(c2);
    p2.offer(c3);
    p2.offer(c4);
    }

    public static void main(String[] args) {
        //TestPriorityQueue();
       // TestCompare1();
       // TestCompare2();
        //TestCompare3();
        TestPriorityQueue();
    }
}
